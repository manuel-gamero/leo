package com.mg.model;

// Generated Mar 3, 2016 12:02:53 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.mg.enums.CouponType;
import com.mg.util.translation.IBasicTranslation;

/**
 * MgCouponsType generated by hbm2java
 */
@Entity
@Table(name = "mg_coupons_type", schema = "bolsos")
public class CouponsType implements java.io.Serializable, BasicModel, IBasicTranslation {

	private static final long serialVersionUID = 3205429201576696876L;
	private int id;
	private Translation translationByDescriptionTransId;
	private Translation translationByNameTransId;
	private CouponType typeCode;
	private String code;
	private Integer multiTime;
	private Integer multiUser;
	private Date creationDate;
	private Set<Coupons> couponses = new HashSet<Coupons>(0);

	public CouponsType() {
	}

	public CouponsType(int id, CouponType typeCode) {
		this.id = id;
		this.typeCode = typeCode;
	}

	public CouponsType(int id,
			Translation translationByDescriptionTransId,
			Translation translationByNameTransId, CouponType typeCode,
			String statusCode, Integer multiTime, Integer multiUser,
			Date creationDate, Set<Coupons> couponses) {
		this.id = id;
		this.translationByDescriptionTransId = translationByDescriptionTransId;
		this.translationByNameTransId = translationByNameTransId;
		this.typeCode = typeCode;
		this.multiTime = multiTime;
		this.multiUser = multiUser;
		this.creationDate = creationDate;
		this.couponses = couponses;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq_coupons_type_id")
	@SequenceGenerator(name="seq_coupons_type_id", sequenceName="bolsos.seq_coupons_type_id", initialValue=1, allocationSize= 1 )
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade=CascadeType.ALL)
	@JoinColumn(name = "description_trans_id")
	public Translation getTranslationByDescriptionTransId() {
		return this.translationByDescriptionTransId;
	}

	public void setTranslationByDescriptionTransId(
			Translation translationByDescriptionTransId) {
		this.translationByDescriptionTransId = translationByDescriptionTransId;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade=CascadeType.ALL)
	@JoinColumn(name = "name_trans_id")
	public Translation getTranslationByNameTransId() {
		return this.translationByNameTransId;
	}

	public void setTranslationByNameTransId(
			Translation translationByNameTransId) {
		this.translationByNameTransId = translationByNameTransId;
	}

	@Column(name = "type_code", nullable = false, length = 30)
	@Enumerated(EnumType.STRING)
	public CouponType getTypeCode() {
		return this.typeCode;
	}

	public void setTypeCode(CouponType typeCode) {
		this.typeCode = typeCode;
	}
	
	@Column(name = "code", nullable = false, length = 30)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "multi_time")
	public Integer getMultiTime() {
		return this.multiTime;
	}

	public void setMultiTime(Integer multiTime) {
		this.multiTime = multiTime;
	}

	@Column(name = "multi_user")
	public Integer getMultiUser() {
		return this.multiUser;
	}

	public void setMultiUser(Integer multiUser) {
		this.multiUser = multiUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", length = 29)
	public Date getCreationDate() {
		if(this.creationDate == null){
			return new Date();
		}
		else{
			return this.creationDate;
		}
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "couponsType")
	public Set<Coupons> getCouponses() {
		return this.couponses;
	}

	public void setCouponses(Set<Coupons> couponses) {
		this.couponses = couponses;
	}

}
