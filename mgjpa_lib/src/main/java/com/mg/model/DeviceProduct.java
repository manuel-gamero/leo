package com.mg.model;

// Generated Sep 18, 2016 9:01:23 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.mg.datamining.interfaces.IDevice;
import com.mg.util.CommonUtils;

/**
 * DeviceProduct generated by hbm2java
 */
@Entity
@Table(name = "mg_device_product", schema = "bolsos")
public class DeviceProduct implements java.io.Serializable, BasicModel, IDevice {

	private static final long serialVersionUID = -8508988226948233174L;
	private int id;
	private Device device;
	private Product product;
	private Integer count;
	private Integer shareCount;
	private Integer addCount;
	private Integer sellCount;
	private Integer removeCount;
	private Date lastModification;
	private Date creationDate;

	public DeviceProduct() {
	}

	public DeviceProduct(int id, Device device, Product product) {
		this.id = id;
		this.device = device;
		this.product = product;
	}

	public DeviceProduct(int id, Device device, Product product,
			Integer count, Integer addCount, Integer sellCount,
			Date lastModification, Date creationDate) {
		this.id = id;
		this.device = device;
		this.product = product;
		this.count = count;
		this.addCount = addCount;
		this.sellCount = sellCount;
		this.lastModification = lastModification;
		this.creationDate = creationDate;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq_device_product_id")
	@SequenceGenerator(name="seq_device_product_id", sequenceName="bolsos.seq_device_product_id", initialValue=1, allocationSize= 1 )
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "device_id", nullable = false)
	public Device getDevice() {
		return this.device;
	}

	public void setDevice(Device device) {
		this.device = device;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id", nullable = false)
	public Product getProduct() {
		return this.product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	@Column(name = "count")
	public Integer getCount() {
		return this.count;
	}

	public void setCount(Integer count) {
		this.count = count;
	}
	
	@Column(name = "share_count")
	public Integer getShareCount() {
		return this.shareCount;
	}

	public void setShareCount(Integer shareCount) {
		this.shareCount = shareCount;
	}

	@Column(name = "add_count")
	public Integer getAddCount() {
		return this.addCount;
	}

	public void setAddCount(Integer addCount) {
		this.addCount = addCount;
	}

	@Column(name = "sell_count")
	public Integer getSellCount() {
		return this.sellCount;
	}

	public void setSellCount(Integer sellCount) {
		this.sellCount = sellCount;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_modification", length = 29)
	public Date getLastModification() {
		return this.lastModification;
	}

	public void setLastModification(Date lastModification) {
		this.lastModification = lastModification;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", length = 29)
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@Column(name = "remove_count")
	public Integer getRemoveCount() {
		return removeCount;
	}

	public void setRemoveCount(Integer removeCount) {
		this.removeCount = removeCount;
	}

	public void add(DeviceProduct deviceProduct1) {
		this.addCount = this.addCount + deviceProduct1.getAddCount();
		this.count = this.count + deviceProduct1.getCount();
		this.removeCount = this.removeCount + deviceProduct1.getRemoveCount();
		this.sellCount = this.sellCount + deviceProduct1.getSellCount();
		this.shareCount = this.shareCount + deviceProduct1.getShareCount();
		this.creationDate = CommonUtils.getNewestDate(this.creationDate, deviceProduct1.getCreationDate());
		this.lastModification = CommonUtils.getNewestDate(this.lastModification, deviceProduct1.getLastModification());
	}
	
	@Override
	public String toString(){
		return "Productid : " + product.getId() + 
			   " ( " +  count + ", " + addCount + ", " + 
				sellCount + ", " + shareCount + ", " +
			    removeCount + " )";
	}

}
