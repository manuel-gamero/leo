package com.mg.model;

// Generated May 13, 2016 10:00:47 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.mg.util.translation.IBasicTranslation;

/**
 * MgProductImage generated by hbm2java
 */
@Entity
@Table(name = "mg_product_image", schema = "bolsos")
public class ProductImage implements java.io.Serializable, BasicModel, IBasicTranslation {

	private static final long serialVersionUID = 1216156940625160949L;
	private int id;
	private Translation translationByDescriptionTransId;
	private Translation translationByNameTransId;
	private Image image;
	private Product product;
	private Date creationDate;

	public ProductImage() {
	}

	public ProductImage(int id, Image image, Product product) {
		this.id = id;
		this.image = image;
		this.product = product;
	}

	public ProductImage(int id,
			Translation translationByDescriptionTransId,
			Translation translationByNameTransId, Image image,
			Product product, Date creationDate) {
		this.id = id;
		this.translationByDescriptionTransId = translationByDescriptionTransId;
		this.translationByNameTransId = translationByNameTransId;
		this.image = image;
		this.product = product;
		this.creationDate = creationDate;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq_product_image_id")
	@SequenceGenerator(name="seq_product_image_id", sequenceName="bolsos.seq_product_image_id", initialValue=1, allocationSize= 1 )
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade=CascadeType.ALL)
	@JoinColumn(name = "description_trans_id")
	public Translation getTranslationByDescriptionTransId() {
		return this.translationByDescriptionTransId;
	}

	public void setTranslationByDescriptionTransId(
			Translation translationByDescriptionTransId) {
		this.translationByDescriptionTransId = translationByDescriptionTransId;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade=CascadeType.ALL)
	@JoinColumn(name = "name_trans_id")
	public Translation getTranslationByNameTransId() {
		return this.translationByNameTransId;
	}

	public void setTranslationByNameTransId(
			Translation translationByNameTransId) {
		this.translationByNameTransId = translationByNameTransId;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade=CascadeType.ALL)
	@JoinColumn(name = "image_id", nullable = false)
	public Image getImage() {
		return this.image;
	}

	public void setImage(Image image) {
		this.image = image;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id", nullable = false)
	public Product getProduct() {
		return this.product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", length = 29)
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

}
