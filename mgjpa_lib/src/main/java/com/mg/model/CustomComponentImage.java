package com.mg.model;

// Generated 31-ene-2015 21:26:16 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import com.mg.enums.CollectionStatus;

/**
 * MgCustomComponentImage generated by hbm2java
 */
@Entity
@Table(name = "mg_custom_component_image", schema = "bolsos", uniqueConstraints = {
		@UniqueConstraint(columnNames = "id") })
public class CustomComponentImage implements java.io.Serializable, BasicModel {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5912770404286742941L;
	private int id;
	private CustomComponentCollection customComponentCollection;
	private CollectionStatus statusCode;
	private Image imageByImageId;
	private Image imageByImageMaskId;
	private Date creationDate;
	private Set<ItemComponent> itemComponents = new HashSet<ItemComponent>(0);
	
	public CustomComponentImage() {
	}

	public CustomComponentImage(int id, Image imageByImageId,
			Image imageByImageMaskId,
			CustomComponentCollection customComponentCollection) {
		this.id = id;
		this.imageByImageId = imageByImageId;
		this.imageByImageMaskId = imageByImageMaskId;
		this.customComponentCollection = customComponentCollection;
	}

	public CustomComponentImage(int id, Image imageByImageId,
			Image imageByImageMaskId,
			CustomComponentCollection customComponentCollection,
			Date creationDate, Set<ItemComponent> itemComponents) {
		this.id = id;
		this.imageByImageId = imageByImageId;
		this.imageByImageMaskId = imageByImageMaskId;
		this.customComponentCollection = customComponentCollection;
		this.creationDate = creationDate;
		this.itemComponents = itemComponents;
	}
	
	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq_custom_component_image_id")
	@SequenceGenerator(name="seq_custom_component_image_id", sequenceName="bolsos.seq_custom_component_image_id", initialValue=1, allocationSize= 1 )
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "component_collection_id", nullable = false)
	public CustomComponentCollection getCustomComponentCollection() {
		return this.customComponentCollection;
	}

	public void setCustomComponentCollection(CustomComponentCollection customComponentCollection) {
		this.customComponentCollection = customComponentCollection;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinColumn(name = "image_id", nullable = false)
	public Image getImageByImageId() {
		return this.imageByImageId;
	}

	public void setImageByImageId(Image imageByImageId) {
		this.imageByImageId = imageByImageId;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinColumn(name = "image_mask_id", nullable = false)
	public Image getImageByImageMaskId() {
		return this.imageByImageMaskId;
	}

	public void setImageByImageMaskId(Image imageByImageMaskId) {
		this.imageByImageMaskId = imageByImageMaskId;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", nullable = false, length = 29)
	public Date getCreationDate() {
		if(this.creationDate == null){
			return new Date();
		}
		else{
			return this.creationDate;
		}
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customComponentImage")
	public Set<ItemComponent> getItemComponents() {
		return this.itemComponents;
	}

	public void setItemComponents(Set<ItemComponent> itemComponents) {
		this.itemComponents = itemComponents;
	}
	
	@Column(name = "status_code", nullable = false, length = 10)
	@Enumerated(EnumType.STRING)
	public CollectionStatus getStatusCode() {
		return this.statusCode;
	}

	public void setStatusCode(CollectionStatus statusCode) {
		this.statusCode = statusCode;
	}
}
