package com.mg.model;

// Generated 31-ene-2015 19:26:19 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.mg.enums.Country;
import com.mg.enums.Province;
import com.mg.enums.UserAddressType;

/**
 * MgUserAddress generated by hbm2java
 */
@Entity
@Table(name = "mg_user_address", schema = "bolsos")
public class UserAddress implements java.io.Serializable, BasicModel {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5527870989196582764L;
	private int id;
	private Users users;
	private UserAddressType typeCode;
	private String street;
	private String apartment;
	private String postCode;
	private Province province;
	private Country country;
	private String firstName;
	private String lastName;
	private String city;
	private Date creationDate;

	public UserAddress() {
	}

	public UserAddress(int id, Users users, UserAddressType typeCode,
			String street, String postCode, Province province, Country country,
			String city, Date creationDate) {
		this.id = id;
		this.users = users;
		this.typeCode = typeCode;
		this.street = street;
		this.postCode = postCode;
		this.province = province;
		this.country = country;
		this.city = city;
		this.creationDate = creationDate;
	}

	public UserAddress(int id, Users users, UserAddressType typeCode,
			String street, String apartment, String postCode, Province province, 
			Country country, String city, Date creationDate) {
		this.id = id;
		this.users = users;
		this.typeCode = typeCode;
		this.street = street;
		this.apartment = apartment;
		this.postCode = postCode;
		this.province = province;
		this.country = country;
		this.city = city;
		this.creationDate = creationDate;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq_user_address_id")
	@SequenceGenerator(name="seq_user_address_id", sequenceName="bolsos.seq_user_address_id", initialValue= 1, allocationSize= 1)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "type_code", nullable = false, length = 10)
	@Enumerated(EnumType.STRING)
	public UserAddressType getTypeCode() {
		return this.typeCode;
	}

	public void setTypeCode(UserAddressType typeCode) {
		this.typeCode = typeCode;
	}

	@Column(name = "street", nullable = false, length = 225)
	public String getStreet() {
		return this.street;
	}

	public void setStreet(String street) {
		this.street = street;
	}

	@Column(name = "apartment", length = 225)
	public String getApartment() {
		return this.apartment;
	}

	public void setApartment(String apartment) {
		this.apartment = apartment;
	}

	@Column(name = "post_code", nullable = false, length = 100)
	public String getPostCode() {
		return this.postCode;
	}

	public void setPostCode(String postCode) {
		this.postCode = postCode;
	}

	@Column(name = "province", nullable = false, length = 225)
	@Enumerated(EnumType.STRING)
	public Province getProvince() {
		return this.province;
	}

	public void setProvince(Province province) {
		this.province = province;
	}

	@Column(name = "country", nullable = false, length = 225)
	@Enumerated(EnumType.STRING)
	public Country getCountry() {
		return this.country;
	}

	public void setCountry(Country country) {
		this.country = country;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", nullable = false, length = 29)
	public Date getCreationDate() {
		if(this.creationDate == null){
			return new Date();
		}
		else{
			return this.creationDate;
		}
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}
	
	@Column(name = "first_name", length = 50)
	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name",  length = 50)
	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public static UserAddress createUserAddress(UserAddress userAddress, UserAddressType type){
		UserAddress address = new UserAddress();
		address.setFirstName(userAddress.getFirstName());
		address.setLastName(userAddress.getLastName());
		address.setApartment(userAddress.getApartment());
		address.setCountry(userAddress.getCountry());
		address.setId(userAddress.getId());
		address.setPostCode(userAddress.getPostCode());
		address.setProvince(userAddress.getProvince());
		address.setStreet(userAddress.getStreet());
		address.setUsers(userAddress.getUsers());
		address.setTypeCode(type);
		address.setCity(userAddress.getCity());		
		return ( address );
	}

	@Column(name = "city",  length = 30)
	public String getCity() {
		return city;
	}

	public void setCity(String city) {
		this.city = city;
	}
}
