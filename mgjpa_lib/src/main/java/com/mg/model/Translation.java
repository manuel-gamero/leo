package com.mg.model;

// Generated 31-ene-2015 19:26:19 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.BatchSize;
import org.hibernate.search.annotations.IndexedEmbedded;

/**
 * MgTranslation generated by hbm2java
 */
@Entity
@Table(name = "mg_translation", schema = "bolsos", uniqueConstraints = {
		@UniqueConstraint(columnNames = "id") })
public class Translation implements java.io.Serializable, BasicModel {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int id;
	private Date creationDate;
	private Set<TranslationEntry> translationEntries = new HashSet<TranslationEntry>(0);
	private Set<Product> productsForDescriptionTransId = new HashSet<Product>(0);
	private Set<Product> productsForNameTransId = new HashSet<Product>(0);
	
	private Set<CustomComponentCollection> customComponentCollectionsForDescriptionTransId = new HashSet<CustomComponentCollection>(0);
	private Set<CustomComponentCollection> customComponentCollectionsForNameTransId = new HashSet<CustomComponentCollection>(0);
	private Set<ProductImage> productImagesForDescriptionTransId = new HashSet<ProductImage>(0);
	private Set<ProductImage> productImagesForNameTransId = new HashSet<ProductImage>(0);

	public Translation() {
	}

	public Translation(int id, Date creationDate) {
		this.id = id;
		this.creationDate = creationDate;
	}

	public Translation(int id, Date creationDate,
			Set<Product> productsForDescriptionTransId,
			Set<Product> productsForNameTransId,
			Set<CustomComponentCollection> customComponentCollectionsForDescriptionTransId,
			Set<CustomComponentCollection> customComponentCollectionsForNameTransId,
			Set<TranslationEntry> translationEntries) {
		this.id = id;
		this.creationDate = creationDate;
		this.productsForDescriptionTransId = productsForDescriptionTransId;
		this.customComponentCollectionsForDescriptionTransId = customComponentCollectionsForDescriptionTransId;
		this.customComponentCollectionsForNameTransId = customComponentCollectionsForNameTransId;
		this.productsForNameTransId = productsForNameTransId;
		this.translationEntries = translationEntries;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq_translation_id")
	@SequenceGenerator(name="seq_translation_id", sequenceName="bolsos.seq_translation_id", initialValue=1, allocationSize= 1 )
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", nullable = false, length = 29)
	public Date getCreationDate() {
		if(creationDate==null){
			return( new Date());
		}
		else {
			return this.creationDate;
		}
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "translationByDescriptionTransId")
	public Set<Product> getProductsForDescriptionTransId() {
		return this.productsForDescriptionTransId;
	}

	public void setProductsForDescriptionTransId(
			Set<Product> productsForDescriptionTransId) {
		this.productsForDescriptionTransId = productsForDescriptionTransId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "translationByNameTransId")
	public Set<Product> getProductsForNameTransId() {
		return this.productsForNameTransId;
	}

	public void setProductsForNameTransId(
			Set<Product> productsForNameTransId) {
		this.productsForNameTransId = productsForNameTransId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "translation", cascade=CascadeType.ALL)
	@BatchSize(size=50)
	@IndexedEmbedded(includeEmbeddedObjectId = true)
	public Set<TranslationEntry> getTranslationEntries() {
		return this.translationEntries;
	}

	public void setTranslationEntries(
			Set<TranslationEntry> translationEntries) {
		this.translationEntries = translationEntries;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "translationByDescriptionTransId")
	public Set<CustomComponentCollection> getCustomComponentCollectionsForDescriptionTransId() {
		return customComponentCollectionsForDescriptionTransId;
	}

	public void setCustomComponentCollectionsForDescriptionTransId(
			Set<CustomComponentCollection> customComponentCollectionsForDescriptionTransId) {
		this.customComponentCollectionsForDescriptionTransId = customComponentCollectionsForDescriptionTransId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "translationByNameTransId")
	public Set<CustomComponentCollection> getCustomComponentCollectionsForNameTransId() {
		return customComponentCollectionsForNameTransId;
	}

	public void setCustomComponentCollectionsForNameTransId(
			Set<CustomComponentCollection> customComponentCollectionsForNameTransId) {
		this.customComponentCollectionsForNameTransId = customComponentCollectionsForNameTransId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "translationByDescriptionTransId")
	public Set<ProductImage> getProductImagesForDescriptionTransId() {
		return this.productImagesForDescriptionTransId;
	}

	public void setProductImagesForDescriptionTransId(
			Set<ProductImage> productImagesForDescriptionTransId) {
		this.productImagesForDescriptionTransId = productImagesForDescriptionTransId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "translationByNameTransId")
	public Set<ProductImage> getProductImagesForNameTransId() {
		return this.productImagesForNameTransId;
	}

	public void setProductImagesForNameTransId(
			Set<ProductImage> productImagesForNameTransId) {
		this.productImagesForNameTransId = productImagesForNameTransId;
	}
}
