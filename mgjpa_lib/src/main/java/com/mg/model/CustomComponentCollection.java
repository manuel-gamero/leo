package com.mg.model;

// Generated 14-mar-2015 9:29:33 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.BatchSize;

import com.mg.enums.CollectionStatus;
import com.mg.enums.ComponentAttributeType;
import com.mg.util.translation.IBasicTranslation;

/**
 * MgCustomComponentCollection generated by hbm2java
 */
@Entity
@Table(name = "mg_custom_component_collection", schema = "bolsos", uniqueConstraints = {
		@UniqueConstraint(columnNames = "id")})
public class CustomComponentCollection implements java.io.Serializable, BasicModel, IBasicTranslation {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int id;
	private CustomComponent customComponent;
	private Collection collection;
	private ComponentAttributeType typeCode;
	private CollectionStatus statusCode;
	private String value;
	private Date creationDate;
	private Image image;
	private Set<CustomComponentImage> customComponentImages = new HashSet<CustomComponentImage>(0);
	private Set<ItemComponent> itemComponents = new HashSet<ItemComponent>(0);
	private Translation translationByDescriptionTransId;
	private Translation translationByNameTransId;


	public CustomComponentCollection() {
	}

	public CustomComponentCollection(int id,
			CustomComponent customComponent, Collection collection,
			ComponentAttributeType typeCode, String value, CollectionStatus statusCode,
			Set<CustomComponentImage> customComponentImages) {
		this.id = id;
		this.customComponent = customComponent;
		this.collection = collection;
		this.typeCode = typeCode;
		this.value = value;
		this.statusCode = statusCode;
		this.customComponentImages = customComponentImages;
	}

	public CustomComponentCollection(int id,
			CustomComponent customComponent, Image image,
			Collection collection, ComponentAttributeType typeCode, String value,
			Date creationDate, CollectionStatus statusCode,
			Set<CustomComponentImage> customComponentImages) {
		this.id = id;
		this.customComponent = customComponent;
		this.image =image;
		this.collection = collection;
		this.typeCode = typeCode;
		this.value = value;
		this.creationDate = creationDate;
		this.statusCode = statusCode;
		this.customComponentImages = customComponentImages;
	}


	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq_custom_component_collection_id")
	@SequenceGenerator(name="seq_custom_component_collection_id", sequenceName="bolsos.seq_custom_component_collection_id", initialValue=1, allocationSize= 1 )
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "custom_id", nullable = false)
	public CustomComponent getCustomComponent() {
		return this.customComponent;
	}

	public void setCustomComponent(CustomComponent customComponent) {
		this.customComponent = customComponent;
	}

	//@ManyToOne(fetch = FetchType.LAZY ,  cascade = CascadeType.PERSIST)
	//@JoinColumn(name = "collection_id", nullable = false)
	
	//@ManyToOne
	
	@ManyToOne( fetch = FetchType.LAZY )
	@JoinColumn(columnDefinition="integer",name = "collection_id" , referencedColumnName = "id", nullable = true)
	public Collection getCollection() {
		return this.collection;
	}

	public void setCollection(Collection collection) {
		this.collection = collection;
	}

	@Column(name = "type_code", nullable = false, length = 10)
	@Enumerated(EnumType.STRING)
	public ComponentAttributeType getTypeCode() {
		return this.typeCode;
	}

	public void setTypeCode(ComponentAttributeType typeCode) {
		this.typeCode = typeCode;
	}

	@Column(name = "value", nullable = false, length = 120)
	public String getValue() {
		return this.value;
	}

	public void setValue(String value) {
		this.value = value;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", length = 29)
	public Date getCreationDate() {
		if(this.creationDate == null){
			return new Date();
		}
		else{
			return this.creationDate;
		}
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}
	
	//@ManyToOne(fetch = FetchType.LAZY)
	@ManyToOne(fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinColumn(name = "image_id")
	public Image getImage() {
		return this.image;
	}

	public void setImage(Image image) {
		this.image = image;
	}
	
	@Column(name = "status_code", nullable = false, length = 10)
	@Enumerated(EnumType.STRING)
	public CollectionStatus getStatusCode() {
		return this.statusCode;
	}

	public void setStatusCode(CollectionStatus statusCode) {
		this.statusCode = statusCode;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customComponentCollection" , cascade={CascadeType.PERSIST, CascadeType.MERGE})
	@BatchSize(size=50)
	public Set<CustomComponentImage> getCustomComponentImages() {
		return this.customComponentImages;
	}

	public void setCustomComponentImages(
			Set<CustomComponentImage> customComponentImages) {
		this.customComponentImages = customComponentImages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customComponentCollection")
	@BatchSize(size=50)
	public Set<ItemComponent> getItemComponents() {
		return this.itemComponents;
	}

	public void setItemComponents(Set<ItemComponent> itemComponents) {
		this.itemComponents = itemComponents;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinColumn(name = "description_trans_id")
	public Translation getTranslationByDescriptionTransId() {
		return translationByDescriptionTransId;
	}

	public void setTranslationByDescriptionTransId(
			Translation translationByDescriptionTransId) {
		this.translationByDescriptionTransId = translationByDescriptionTransId;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinColumn(name = "name_trans_id")
	public Translation getTranslationByNameTransId() {
		return translationByNameTransId;
	}

	public void setTranslationByNameTransId(Translation translationByNameTransId) {
		this.translationByNameTransId = translationByNameTransId;
	}
}
