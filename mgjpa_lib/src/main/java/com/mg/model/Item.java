package com.mg.model;

// Generated 07-may-2015 22:26:15 by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * MgItem generated by hbm2java
 */
@Entity
@Table(name = "mg_item", schema = "bolsos")
public class Item  implements java.io.Serializable, BasicModel {

	private static final long serialVersionUID = 1L;
	private int id;
	private Product product;
	private String text;
	private String font;
	private String size;
	private String color;
	private String nameImage;
	private Date creationDate;
	private Set<ItemComponent> itemComponents = new HashSet<ItemComponent>(0);
	private Set<ShoppingCartItem> shoppingCartItems = new HashSet<ShoppingCartItem>(0);
	private BigDecimal discountPrice;

	public Item() {
	}

	public Item(int id, Product product) {
		this.id = id;
		this.product = product;
	}

	public Item(int id, Product product, String text, String font,
			String size, Date creationDate,
			Set<ItemComponent> itemComponents,
			Set<ShoppingCartItem> shoppingCartItems) {
		this.id = id;
		this.product = product;
		this.text = text;
		this.font = font;
		this.size = size;
		this.creationDate = creationDate;
		this.itemComponents = itemComponents;
		this.shoppingCartItems = shoppingCartItems;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq_item_id")
	@SequenceGenerator(name="seq_item_id", sequenceName="bolsos.seq_item_id", initialValue=1, allocationSize= 1 )
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id", nullable = false)
	public Product getProduct() {
		return this.product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	@Column(name = "text", length = 50)
	public String getText() {
		return this.text;
	}

	public void setText(String text) {
		this.text = text;
	}

	@Column(name = "font", length = 120)
	public String getFont() {
		return this.font;
	}

	public void setFont(String font) {
		this.font = font;
	}

	@Column(name = "size", length = 120)
	public String getSize() {
		return this.size;
	}

	public void setSize(String size) {
		this.size = size;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", nullable = false, length = 29)
	public Date getCreationDate() {
		if(this.creationDate == null){
			return new Date();
		}
		else{
			return this.creationDate;
		}
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "item", cascade=CascadeType.ALL)
	public Set<ItemComponent> getItemComponents() {
		return this.itemComponents;
	}

	public void setItemComponents(Set<ItemComponent> itemComponents) {
		this.itemComponents = itemComponents;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "item")
	public Set<ShoppingCartItem> getShoppingCartItems() {
		return this.shoppingCartItems;
	}

	public void setShoppingCartItems(
			Set<ShoppingCartItem> shoppingCartItems) {
		this.shoppingCartItems = shoppingCartItems;
	}

	@Column(name = "name_image", length = 25)
	public String getNameImage() {
		return nameImage;
	}

	public void setNameImage(String nameImage) {
		this.nameImage = nameImage;
	}

	@Column(name = "color", length = 10)
	public String getColor() {
		return color;
	}

	public void setColor(String color) {
		this.color = color;
	}
	
	@Column(name = "discount_price", precision = 10, scale = 2)
	public BigDecimal getDiscountPrice() {
		return discountPrice;
	}

	public void setDiscountPrice(BigDecimal discountPrice) {
		this.discountPrice = discountPrice;
	}

}
